local Players = game:GetService("Players")
local StarterGui = game:GetService("StarterGui")
local TextChatService = game:GetService("TextChatService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local LocalPlayer = Players.LocalPlayer

local oldChat = TextChatService.ChatVersion ~= Enum.ChatVersion.TextChatService
local Chat = function(msg)
	if oldChat then
		ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(msg, "All")
	else
		TextChatService.TextChannels.RBXGeneral:SendAsync(msg)
	end
end

local selectedLanguage = nil
local translationEnabled = false
local lastMessage = ""

local translations = {
	["Chinese"] = {
		["hi"] = "你好", ["hello"] = "你好", ["how are you"] = "你好吗", ["yes"] = "是", ["no"] = "不", ["bye"] = "再见"
	},
	["Russian"] = {
		["hi"] = "привет", ["hello"] = "здравствуйте", ["how are you"] = "как дела", ["yes"] = "да", ["no"] = "нет", ["bye"] = "пока"
	},
	["Japanese"] = {
		["hi"] = "こんにちは", ["hello"] = "こんにちは", ["how are you"] = "お元気ですか", ["yes"] = "はい", ["no"] = "いいえ", ["bye"] = "さようなら"
	}
}

local function translateText(text, lang)
	local langDict = translations[lang]
	if not langDict then return text end

	text = text:lower()
	for word, trans in pairs(langDict) do
		text = text:gsub("%f[%a]" .. word .. "%f[%A]", trans)
	end
	return text
end

-- Show welcome notification
StarterGui:SetCore("SendNotification", {
	Title = "Language Bot",
	Text = "Hello! Pick your language:\n1 = Chinese\n2 = Russian\n3 = Japanese",
	Duration = 10
})

-- Listen to chat input
local function onChat(message)
	if message == lastMessage then return end
	lastMessage = message

	if message == "1" then
		selectedLanguage = "Chinese"
		translationEnabled = true
		StarterGui:SetCore("SendNotification", {
			Title = "Language Set",
			Text = "You selected Chinese",
			Duration = 5
		})
	elseif message == "2" then
		selectedLanguage = "Russian"
		translationEnabled = true
		StarterGui:SetCore("SendNotification", {
			Title = "Language Set",
			Text = "You selected Russian",
			Duration = 5
		})
	elseif message == "3" then
		selectedLanguage = "Japanese"
		translationEnabled = true
		StarterGui:SetCore("SendNotification", {
			Title = "Language Set",
			Text = "You selected Japanese",
			Duration = 5
		})
	elseif message == "?stop" then
		selectedLanguage = nil
		translationEnabled = false
		StarterGui:SetCore("SendNotification", {
			Title = "Translation Stopped",
			Text = "Translation disabled.",
			Duration = 5
		})
	elseif translationEnabled and selectedLanguage then
		local translated = translateText(message, selectedLanguage)
		if translated ~= message then
			Chat(translated)
		end
	end
end

-- Connect to chat
if not oldChat then
	TextChatService.TextChannels.RBXGeneral.OnIncomingMessage = function(msg)
		if msg.TextSource and msg.TextSource.UserId == LocalPlayer.UserId then
			onChat(msg.Text)
		end
	end
else
	LocalPlayer.Chatted:Connect(onChat)
end
