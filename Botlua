local Players = game:GetService("Players")
local TextChatService = game:GetService("TextChatService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local StarterGui = game:GetService("StarterGui")

local player = Players.LocalPlayer
local SayMessageRequest = ReplicatedStorage:FindFirstChild("DefaultChatSystemChatEvents") and ReplicatedStorage.DefaultChatSystemChatEvents:FindFirstChild("SayMessageRequest")

local selectedLanguage = nil
local translationEnabled = false
local lastMessage = ""
local cooldown = 2
local lastSendTime = 0

local translations = {
	["Chinese"] = {
		["hi"] = "你好", ["hello"] = "你好", ["how are you"] = "你好吗", ["yes"] = "是", ["no"] = "不", ["bye"] = "再见"
	},
	["Russian"] = {
		["hi"] = "привет", ["hello"] = "здравствуйте", ["how are you"] = "как дела", ["yes"] = "да", ["no"] = "нет", ["bye"] = "пока"
	},
	["Japanese"] = {
		["hi"] = "こんにちは", ["hello"] = "こんにちは", ["how are you"] = "お元気ですか", ["yes"] = "はい", ["no"] = "いいえ", ["bye"] = "さようなら"
	}
}

local function notify(title, text)
	local success, err = pcall(function()
		StarterGui:SetCore("SendNotification", {
			Title = title,
			Text = text,
			Duration = 3
		})
	end)

	if not success then
		warn("Notification failed: " .. err)
		print("Fallback Notification:", title, text)
	end
end

local function translate(text)
	local words = {}
	for word in text:lower():gmatch("%S+") do
		local translated = translations[selectedLanguage] and translations[selectedLanguage][word] or word
		table.insert(words, translated)
	end
	return table.concat(words, " ")
end

TextChatService.MessageReceived:Connect(function(messageObj)
	local sender = Players:GetPlayerByUserId(messageObj.TextSource.UserId)
	if not sender or sender ~= player then return end

	local text = messageObj.Text
	print("Received message:", text)

	if text == lastMessage then return end -- prevents double fire
	lastMessage = text

	if not translationEnabled then
		if text == "1" then
			selectedLanguage = "Chinese"
		elseif text == "2" then
			selectedLanguage = "Russian"
		elseif text == "3" then
			selectedLanguage = "Japanese"
		end

		if selectedLanguage then
			translationEnabled = true
			notify("Language Selected", "You selected " .. selectedLanguage)
			print("Language selected:", selectedLanguage)
		end
		return
	end

	if text == "?stop" then
		translationEnabled = false
		selectedLanguage = nil
		notify("Translation Stopped", "Translation has been disabled.")
		print("Translation stopped.")
		return
	end

	if translationEnabled and (tick() - lastSendTime > cooldown) then
		lastSendTime = tick()
		local translated = translate(text)
		if translated ~= text then
			local combinedMessage = "Original: " .. text .. " | Translated: " .. translated
			print("Sending message:", combinedMessage)
			if SayMessageRequest then
				SayMessageRequest:FireServer(combinedMessage, "All")
			else
				warn("SayMessageRequest not available.")
			end
		end
	end
end)
